#!/bin/bash

# Usage:
# build-song <song> <tempo>

# Check if there are 2 bass tracks
if [ -f "$1"-bass-A ] ; then
	# Build them both
	echo "Building bass track A..."
	./build-track "$1"-bass-A triangle "$2"
	echo "Building bass track B"
	./build-track "$1"-bass-B triangle "$2"
	# Put them in sequence
	# Look for bass control file
	if [ -f "$1"-bass.mec ] ; then
		# Create blank .wav file
		sox -n -c 1 temp1.wav trim 0.0 0.0
		j=1
		while read -r track; do
			sox temp"$j".wav "$1"-bass-"$track".wav temp"$((j+1))".wav
			rm temp"$j".wav
			j=$((j+1))
		done < "$1"-bass.mec
		mv temp"$j".wav "$1"-bass.wav
	else
		# By default they are concatenated (A B)
		sox "$1"-bass-A.wav "$1"-bass-B.wav "$1"-bass.wav
	fi
else
	# Build the one track
	echo "Building bass track..."
	./build-track "$1"-bass triangle "$2"
fi
# Build lead track
# Check if there are 2 lead tracks
if [ -f "$1"-lead2 ] ; then
	# Build them both
	echo "Building lead track 1..."
	./build-track "$1"-lead1 square "$2"
	echo "Building lead track 2"
	./build-track "$1"-lead2 square "$2"
	# And mix them together
	echo "Mixing..."
	sox -m "$1"-lead1.wav "$1"-lead2.wav "$1"-lead.wav &>/dev/null
	# Delete individual tracks
	rm "$1"-lead1.wav
	rm "$1"-lead2.wav
else
	# Otherwise just do the 1 lead
	echo "Building lead track..."
	./build-track "$1"-lead square "$2"
fi
# Build drum track
./build-drums "$1" "$2"
# Mix final tracks together
echo "Mixing..."
sox -m "$1"-drums.wav "$1"-bass.wav "$1"-lead.wav "$1".wav &>/dev/null
# Delete track files
# rm "$1"-drums.wav
# rm "$1"-bass.wav
# rm "$1"-lead.wav
# Clean up samples
rm note*.wav
# Play it!
echo "Playing..."
play "$1".wav &>/dev/null
